@tailwind base;
@tailwind components;
@tailwind utilities;

:root {
  --foreground-rgb: 0, 0, 0;
  --background-start-rgb: 255, 255, 255;
  --background-end-rgb: 255, 255, 255;
}

@media (prefers-color-scheme: dark) {
  :root {
    --foreground-rgb: 255, 255, 255;
    --background-start-rgb: 0, 0, 0;
    --background-end-rgb: 0, 0, 0;
  }
}

body {
  color: rgb(var(--foreground-rgb));
  background: #0a0a0f;
}

html {
  scroll-behavior: smooth;
}

@layer utilities {
  .text-balance {
    text-wrap: balance;
  }
}

/* Hide scrollbar for Chrome, Safari and Opera */
::-webkit-scrollbar {
  display: none;
}

/* Hide scrollbar for IE, Edge and Firefox */
* {
  -ms-overflow-style: none; /* IE and Edge */
  scrollbar-width: none; /* Firefox */
}

/* Cyberpunk styling */
.cyberpunk-bg {
  background-color: #0a0a0f;
  position: relative;
}

.cyberpunk-heading {
  letter-spacing: 0.05em;
  text-transform: uppercase;
}

.cyberpunk-text {
  background: linear-gradient(to right, #bd00ff, #00f0ff);
  -webkit-background-clip: text;
  -webkit-text-fill-color: transparent;
  background-clip: text;
  text-shadow: 0 0 10px rgba(189, 0, 255, 0.5);
}

.cyberpunk-text-active {
  background: linear-gradient(to right, #bd00ff, #00f0ff);
  -webkit-background-clip: text;
  -webkit-text-fill-color: transparent;
  background-clip: text;
  text-shadow: 0 0 15px rgba(189, 0, 255, 0.7);
  letter-spacing: 0.05em;
  transform: scale(1.05);
}

.cyberpunk-text-gradient {
  background: linear-gradient(to right, #bd00ff, #00f0ff);
  -webkit-background-clip: text;
  -webkit-text-fill-color: transparent;
  background-clip: text;
  text-shadow: 0 0 15px rgba(189, 0, 255, 0.5);
}

.cyberpunk-text-gradient-alt {
  background: linear-gradient(to right, #00f0ff, #bd00ff);
  -webkit-background-clip: text;
  -webkit-text-fill-color: transparent;
  background-clip: text;
  text-shadow: 0 0 15px rgba(0, 240, 255, 0.5);
}

/* Cyberpunk 2077 inspired color schemes */
.cyberpunk-text-gradient-toxic {
  background: linear-gradient(to right, #00f0ff, #0d9488);
  -webkit-background-clip: text;
  -webkit-text-fill-color: transparent;
  background-clip: text;
  text-shadow: 0 0 15px rgba(0, 240, 255, 0.5);
}

.cyberpunk-text-gradient-warning {
  background: linear-gradient(to right, #ffd700, #ff0055);
  -webkit-background-clip: text;
  -webkit-text-fill-color: transparent;
  background-clip: text;
  text-shadow: 0 0 15px rgba(255, 215, 0, 0.5);
}

.text-gradient-from-lime-500.to-green-500 {
  background: linear-gradient(to right, #00f0ff, #0d9488);
  -webkit-background-clip: text;
  -webkit-text-fill-color: transparent;
  background-clip: text;
}

.text-gradient-from-red-500.to-amber-500 {
  background: linear-gradient(to right, #ff0055, #ffd700);
  -webkit-background-clip: text;
  -webkit-text-fill-color: transparent;
  background-clip: text;
}

.text-gradient-from-cyan-500.to-blue-500 {
  background: linear-gradient(to right, #00f0ff, #1e3a8a);
  -webkit-background-clip: text;
  -webkit-text-fill-color: transparent;
  background-clip: text;
}

.text-gradient-from-purple-500.to-pink-500 {
  background: linear-gradient(to right, #bd00ff, #ff0099);
  -webkit-background-clip: text;
  -webkit-text-fill-color: transparent;
  background-clip: text;
}

.neon-text-purple {
  color: #bd00ff;
  text-shadow: 0 0 5px rgba(189, 0, 255, 0.7);
}

.neon-text-cyan {
  color: #00f0ff;
  text-shadow: 0 0 5px rgba(0, 240, 255, 0.7);
}

.neon-text-white {
  color: white;
  text-shadow: 0 0 5px rgba(255, 255, 255, 0.7);
}

.neon-text-toxic {
  color: #00f0ff;
  text-shadow: 0 0 5px rgba(0, 240, 255, 0.7);
}

.cyberpunk-card {
  box-shadow: 0 0 20px rgba(189, 0, 255, 0.2), 0 0 30px rgba(0, 240, 255, 0.1);
  border: 1px solid rgba(255, 255, 255, 0.1);
  backdrop-filter: blur(5px);
}

.cyberpunk-button {
  box-shadow: 0 0 10px rgba(189, 0, 255, 0.3);
}

.cyberpunk-button-active {
  box-shadow: 0 0 15px rgba(0, 240, 255, 0.5);
}

.glow-bar {
  box-shadow: 0 0 10px rgba(189, 0, 255, 0.5);
}

/* Grid lines */
.grid-lines {
  background-image: linear-gradient(to right, rgba(0, 240, 255, 0.05) 1px, transparent 1px),
    linear-gradient(to bottom, rgba(0, 240, 255, 0.05) 1px, transparent 1px);
  background-size: 40px 40px;
}

/* Scanlines effect */
.cyberpunk-scanlines {
  background: linear-gradient(to bottom, transparent 50%, rgba(0, 0, 0, 0.3) 50%);
  background-size: 100% 4px;
  pointer-events: none;
}

/* Glitch effect */
.cyberpunk-glitch-effect {
  background-image: repeating-linear-gradient(
    to bottom,
    transparent,
    transparent 2px,
    rgba(189, 0, 255, 0.1) 2px,
    rgba(0, 240, 255, 0.1) 4px
  );
  mix-blend-mode: overlay;
  animation: glitch 5s infinite linear alternate;
  opacity: 0.3;
}

.glitch-effect {
  animation: glitch-effect 0.3s ease-in-out;
}

@keyframes glitch-effect {
  0% {
    transform: translate(0);
    filter: hue-rotate(0deg);
  }
  20% {
    transform: translate(5px, 0);
    filter: hue-rotate(90deg);
  }
  40% {
    transform: translate(-5px, 0);
    filter: hue-rotate(180deg);
  }
  60% {
    transform: translate(3px, 0);
    filter: hue-rotate(270deg);
  }
  80% {
    transform: translate(-3px, 0);
    filter: hue-rotate(360deg);
  }
  100% {
    transform: translate(0);
    filter: hue-rotate(0deg);
  }
}

@keyframes glitch {
  0% {
    opacity: 0.1;
    transform: translateX(0);
  }
  20% {
    opacity: 0.3;
    transform: translateX(3px);
  }
  40% {
    opacity: 0.1;
    transform: translateX(-3px);
  }
  60% {
    opacity: 0.3;
    transform: translateX(0);
  }
  80% {
    opacity: 0.1;
    transform: translateX(3px);
  }
  100% {
    opacity: 0.3;
    transform: translateX(-3px);
  }
}

/* Pulse animations */
@keyframes pulse-slow {
  0%,
  100% {
    opacity: 0.3;
    transform: scale(1);
  }
  50% {
    opacity: 0.6;
    transform: scale(1.2);
  }
}

@keyframes pulse-slow-delay {
  0%,
  100% {
    opacity: 0.3;
    transform: scale(1);
  }
  50% {
    opacity: 0.6;
    transform: scale(1.3);
  }
}

@keyframes pulse-fast {
  0%,
  100% {
    opacity: 0.7;
  }
  50% {
    opacity: 1;
  }
}

.animate-pulse-slow {
  animation: pulse-slow 8s infinite ease-in-out;
}

.animate-pulse-slow-delay {
  animation: pulse-slow-delay 10s infinite ease-in-out;
  animation-delay: 2s;
}

.animate-pulse-fast {
  animation: pulse-fast 0.5s infinite ease-in-out;
}

/* Pulse point animation */
.pulse-point {
  animation: pulse-point 2s infinite;
}

@keyframes pulse-point {
  0% {
    transform: scale(1);
    box-shadow: 0 0 0 0 rgba(0, 240, 255, 0.7);
  }
  70% {
    transform: scale(3);
    box-shadow: 0 0 0 10px rgba(0, 240, 255, 0);
  }
  100% {
    transform: scale(1);
    box-shadow: 0 0 0 0 rgba(0, 240, 255, 0);
  }
}

/* Gradient text */
.text-gradient {
  background: linear-gradient(to right, #bd00ff, #00f0ff);
  -webkit-background-clip: text;
  -webkit-text-fill-color: transparent;
  background-clip: text;
}

/* Glow effects */
.glow-purple {
  box-shadow: 0 0 15px 2px rgba(189, 0, 255, 0.3);
}

.glow-blue {
  box-shadow: 0 0 15px 2px rgba(0, 240, 255, 0.3);
}

.glow-text {
  text-shadow: 0 0 10px rgba(189, 0, 255, 0.5);
}

/* Circuit pattern */
.circuit-pattern {
  background-image: url("data:image/svg+xml,%3Csvg width='100' height='100' viewBox='0 0 100 100' xmlns='http://www.w3.org/2000/svg'%3E%3Cpath d='M10 10h80v80H10z' fill='none' stroke='%2300F0FF' stroke-width='0.5'/%3E%3Cpath d='M30 10v30h30' fill='none' stroke='%2300F0FF' stroke-width='0.5'/%3E%3Ccircle cx='60' cy='40' r='2' fill='%2300F0FF' opacity='0.5'/%3E%3Cpath d='M60 40v30h30' fill='none' stroke='%2300F0FF' stroke-width='0.5'/%3E%3Ccircle cx='90' cy='70' r='2' fill='%2300F0FF' opacity='0.5'/%3E%3Cpath d='M10 40h20' fill='none' stroke='%2300F0FF' stroke-width='0.5'/%3E%3Ccircle cx='30' cy='40' r='2' fill='%2300F0FF' opacity='0.5'/%3E%3Cpath d='M10 70h20v20' fill='none' stroke='%2300F0FF' stroke-width='0.5'/%3E%3Ccircle cx='30' cy='70' r='2' fill='%2300F0FF' opacity='0.5'/%3E%3C/svg%3E");
  background-size: 100px 100px;
}

/* Digital rain effect */
.digital-rain {
  position: absolute;
  top: 0;
  left: 0;
  right: 0;
  bottom: 0;
  overflow: hidden;
  background: linear-gradient(to bottom, transparent, rgba(0, 240, 255, 0.05));
}

.digital-rain::before {
  content: "";
  position: absolute;
  top: -100%;
  left: 0;
  right: 0;
  height: 200%;
  background: repeating-linear-gradient(to bottom, transparent 0%, rgba(0, 240, 255, 0.1) 0.5%, transparent 1%);
  animation: digital-rain 20s linear infinite;
}

/* Digital noise */
.digital-noise {
  background-image: url("data:image/svg+xml,%3Csvg viewBox='0 0 200 200' xmlns='http://www.w3.org/2000/svg'%3E%3Cfilter id='noise'%3E%3CfeTurbulence type='fractalNoise' baseFrequency='0.65' numOctaves='3' stitchTiles='stitch'/%3E%3C/filter%3E%3Crect width='100%25' height='100%25' filter='url(%23noise)' opacity='0.5'/%3E%3C/svg%3E");
  background-size: 200px 200px;
}

/* RGB split effects */
.rgb-split-r {
  filter: brightness(1.5) contrast(1.5) hue-rotate(0deg);
  mix-blend-mode: screen;
}

.rgb-split-b {
  filter: brightness(1.5) contrast(1.5) hue-rotate(240deg);
  mix-blend-mode: screen;
}

/* Glitch text effect */
.glitch-container {
  position: relative;
  display: inline-block;
}

.glitch-text {
  position: relative;
  animation: glitch-skew 1s infinite linear alternate-reverse;
}

.glitch-text::before,
.glitch-text::after {
  content: attr(data-text);
  position: absolute;
  top: 0;
  left: 0;
  width: 100%;
  height: 100%;
}

.glitch-text::before {
  left: 2px;
  text-shadow: -2px 0 #bd00ff;
  clip: rect(44px, 450px, 56px, 0);
  animation: glitch-anim 5s infinite linear alternate-reverse;
}

.glitch-text::after {
  left: -2px;
  text-shadow: -2px 0 #00f0ff;
  clip: rect(44px, 450px, 56px, 0);
  animation: glitch-anim2 5s infinite linear alternate-reverse;
}

@keyframes glitch-anim {
  0% {
    clip: rect(31px, 9999px, 94px, 0);
    transform: skew(0.85deg);
  }
  5% {
    clip: rect(70px, 9999px, 71px, 0);
    transform: skew(0.17deg);
  }
  10% {
    clip: rect(75px, 9999px, 92px, 0);
    transform: skew(0.4deg);
  }
  15% {
    clip: rect(12px, 9999px, 23px, 0);
    transform: skew(0.29deg);
  }
  20% {
    clip: rect(18px, 9999px, 93px, 0);
    transform: skew(0.67deg);
  }
  25% {
    clip: rect(20px, 9999px, 35px, 0);
    transform: skew(0.29deg);
  }
  30% {
    clip: rect(1px, 9999px, 15px, 0);
    transform: skew(0.71deg);
  }
  35% {
    clip: rect(43px, 9999px, 9px, 0);
    transform: skew(0.4deg);
  }
  40% {
    clip: rect(92px, 9999px, 32px, 0);
    transform: skew(0.1deg);
  }
  45% {
    clip: rect(9px, 9999px, 98px, 0);
    transform: skew(0.71deg);
  }
  50% {
    clip: rect(59px, 9999px, 23px, 0);
    transform: skew(0.95deg);
  }
  55% {
    clip: rect(20px, 9999px, 67px, 0);
    transform: skew(0.17deg);
  }
  60% {
    clip: rect(79px, 9999px, 34px, 0);
    transform: skew(0.1deg);
  }
  65% {
    clip: rect(98px, 9999px, 86px, 0);
    transform: skew(0.22deg);
  }
  70% {
    clip: rect(82px, 9999px, 34px, 0);
    transform: skew(0.67deg);
  }
  75% {
    clip: rect(29px, 9999px, 46px, 0);
    transform: skew(0.33deg);
  }
  80% {
    clip: rect(75px, 9999px, 85px, 0);
    transform: skew(0.1deg);
  }
  85% {
    clip: rect(65px, 9999px, 19px, 0);
    transform: skew(0.6deg);
  }
  90% {
    clip: rect(65px, 9999px, 9px, 0);
    transform: skew(0.31deg);
  }
  95% {
    clip: rect(90px, 9999px, 23px, 0);
    transform: skew(0.75deg);
  }
  100% {
    clip: rect(46px, 9999px, 7px, 0);
    transform: skew(0.3deg);
  }
}

@keyframes glitch-anim2 {
  0% {
    clip: rect(65px, 9999px, 65px, 0);
    transform: skew(0.19deg);
  }
  5% {
    clip: rect(7px, 9999px, 75px, 0);
    transform: skew(0.53deg);
  }
  10% {
    clip: rect(23px, 9999px, 35px, 0);
    transform: skew(0.84deg);
  }
  15% {
    clip: rect(74px, 9999px, 32px, 0);
    transform: skew(0.11deg);
  }
  20% {
    clip: rect(46px, 9999px, 63px, 0);
    transform: skew(0.3deg);
  }
  25% {
    clip: rect(72px, 9999px, 44px, 0);
    transform: skew(0.75deg);
  }
  30% {
    clip: rect(95px, 9999px, 80px, 0);
    transform: skew(0.78deg);
  }
  35% {
    clip: rect(23px, 9999px, 77px, 0);
    transform: skew(0.42deg);
  }
  40% {
    clip: rect(66px, 9999px, 8px, 0);
    transform: skew(0.76deg);
  }
  45% {
    clip: rect(74px, 9999px, 97px, 0);
    transform: skew(0.25deg);
  }
  50% {
    clip: rect(82px, 9999px, 99px, 0);
    transform: skew(0.18deg);
  }
  55% {
    clip: rect(68px, 9999px, 93px, 0);
    transform: skew(0.81deg);
  }
  60% {
    clip: rect(100px, 9999px, 67px, 0);
    transform: skew(0.4deg);
  }
  65% {
    clip: rect(25px, 9999px, 40px, 0);
    transform: skew(0.22deg);
  }
  70% {
    clip: rect(29px, 9999px, 30px, 0);
    transform: skew(0.86deg);
  }
  75% {
    clip: rect(100px, 9999px, 73px, 0);
    transform: skew(0.72deg);
  }
  80% {
    clip: rect(56px, 9999px, 67px, 0);
    transform: skew(0.66deg);
  }
  85% {
    clip: rect(10px, 9999px, 8px, 0);
    transform: skew(0.13deg);
  }
  90% {
    clip: rect(95px, 9999px, 59px, 0);
    transform: skew(0.25deg);
  }
  95% {
    clip: rect(36px, 9999px, 72px, 0);
    transform: skew(0.31deg);
  }
  100% {
    clip: rect(23px, 9999px, 60px, 0);
    transform: skew(0.67deg);
  }
}

@keyframes glitch-skew {
  0% {
    transform: skew(1deg);
  }
  10% {
    transform: skew(-1deg);
  }
  20% {
    transform: skew(0deg);
  }
  30% {
    transform: skew(-1deg);
  }
  40% {
    transform: skew(0deg);
  }
  50% {
    transform: skew(1deg);
  }
  60% {
    transform: skew(-1deg);
  }
  70% {
    transform: skew(0deg);
  }
  80% {
    transform: skew(1deg);
  }
  90% {
    transform: skew(0deg);
  }
  100% {
    transform: skew(-1deg);
  }
}

/* Subtle glitch text effect for headings */
.glitch-text-subtle {
  position: relative;
}

.glitch-text-subtle::before,
.glitch-text-subtle::after {
  content: attr(data-text);
  position: absolute;
  top: 0;
  left: 0;
  width: 100%;
  height: 100%;
  opacity: 0.8;
}

.glitch-text-subtle::before {
  left: 1px;
  text-shadow: -1px 0 #bd00ff;
  animation: glitch-subtle 5s infinite linear alternate-reverse;
}

.glitch-text-subtle::after {
  left: -1px;
  text-shadow: 1px 0 #00f0ff;
  animation: glitch-subtle 4s infinite linear alternate-reverse;
}

@keyframes glitch-subtle {
  0% {
    transform: translateX(0);
  }
  5% {
    transform: translateX(1px);
  }
  10% {
    transform: translateX(-1px);
  }
  15% {
    transform: translateX(0);
  }
  20% {
    transform: translateX(1px);
  }
  25% {
    transform: translateX(0);
  }
  30% {
    transform: translateX(-1px);
  }
  35% {
    transform: translateX(0);
  }
  40% {
    transform: translateX(1px);
  }
  45% {
    transform: translateX(0);
  }
  50% {
    transform: translateX(-1px);
  }
  55% {
    transform: translateX(0);
  }
  60% {
    transform: translateX(1px);
  }
  65% {
    transform: translateX(0);
  }
  70% {
    transform: translateX(-1px);
  }
  75% {
    transform: translateX(0);
  }
  80% {
    transform: translateX(1px);
  }
  85% {
    transform: translateX(0);
  }
  90% {
    transform: translateX(-1px);
  }
  95% {
    transform: translateX(0);
  }
  100% {
    transform: translateX(1px);
  }
}

/* Terminal text effect */
.terminal-text {
  font-family: monospace;
  position: relative;
  overflow: hidden;
}

.terminal-container {
  background-color: rgba(0, 0, 0, 0.7);
  border-radius: 4px;
  box-shadow: 0 0 10px rgba(0, 240, 255, 0.3);
}

/* Holographic element */
.holographic-element {
  background: conic-gradient(from 0deg, #bd00ff, #00f0ff, #ff0099, #ffd700, #bd00ff);
  border-radius: 50%;
  animation: rotate 10s linear infinite;
  opacity: 0.5;
  filter: blur(1px);
}

@keyframes rotate {
  from {
    transform: rotate(0deg);
  }
  to {
    transform: rotate(360deg);
  }
}

/* Audio visualizer */
.audio-visualizer {
  display: flex;
  align-items: flex-end;
  gap: 2px;
  height: 40px;
  width: 200px;
}

.audio-bar {
  width: 2px;
  background: linear-gradient(to top, #00f0ff, #bd00ff);
  border-radius: 1px;
  animation: audio-bar 1.5s ease-in-out infinite;
}

@keyframes audio-bar {
  0%,
  100% {
    height: 10%;
  }
  50% {
    height: 100%;
  }
}

/* Dystopian elements */
.dystopian-overlay {
  background-image: url("data:image/svg+xml,%3Csvg width='100' height='100' viewBox='0 0 100 100' xmlns='http://www.w3.org/2000/svg'%3E%3Cpath d='M0 0h100v100H0z' fill='none'/%3E%3Cpath d='M0 0h100v20H0z' fill='%23000' opacity='0.1'/%3E%3Cpath d='M0 40h100v20H0z' fill='%23000' opacity='0.1'/%3E%3Cpath d='M0 80h100v20H0z' fill='%23000' opacity='0.1'/%3E%3C/svg%3E");
  background-size: 100px 100px;
}

.surveillance-grid {
  background-image: url("data:image/svg+xml,%3Csvg width='100' height='100' viewBox='0 0 100 100' xmlns='http://www.w3.org/2000/svg'%3E%3Ccircle cx='50' cy='50' r='40' stroke='%2300F0FF' stroke-width='0.5' fill='none' opacity='0.2'/%3E%3Ccircle cx='50' cy='50' r='20' stroke='%2300F0FF' stroke-width='0.5' fill='none' opacity='0.2'/%3E%3Cline x1='10' y1='50' x2='90' y2='50' stroke='%2300F0FF' stroke-width='0.5' opacity='0.2'/%3E%3Cline x1='50' y1='10' x2='50' y2='90' stroke='%2300F0FF' stroke-width='0.5' opacity='0.2'/%3E%3C/svg%3E");
  background-size: 100px 100px;
}

.surveillance-camera {
  position: relative;
}

.camera-ray {
  position: absolute;
  top: 50%;
  left: 50%;
  width: 100px;
  height: 2px;
  background: linear-gradient(to right, rgba(255, 0, 85, 0.5), transparent);
  transform-origin: left;
  transform: rotate(45deg);
  animation: camera-scan 4s infinite alternate;
}

@keyframes camera-scan {
  0% {
    transform: rotate(30deg);
  }
  100% {
    transform: rotate(60deg);
  }
}

.binary-code-overlay {
  background-image: url("data:image/svg+xml,%3Csvg width='100' height='100' viewBox='0 0 100 100' xmlns='http://www.w3.org/2000/svg'%3E%3Ctext x='10' y='20' font-family='monospace' font-size='10' fill='%2300F0FF'%3E01011%3C/text%3E%3Ctext x='50' y='20' font-family='monospace' font-size='10' fill='%2300F0FF'%3E10110%3C/text%3E%3Ctext x='10' y='40' font-family='monospace' font-size='10' fill='%2300F0FF'%3E10010%3C/text%3E%3Ctext x='50' y='40' font-family='monospace' font-size='10' fill='%2300F0FF'%3E01101%3C/text%3E%3Ctext x='10' y='60' font-family='monospace' font-size='10' fill='%2300F0FF'%3E11001%3C/text%3E%3Ctext x='50' y='60' font-family='monospace' font-size='10' fill='%2300F0FF'%3E00110%3C/text%3E%3Ctext x='10' y='80' font-family='monospace' font-size='10' fill='%2300F0FF'%3E01010%3C/text%3E%3Ctext x='50' y='80' font-family='monospace' font-size='10' fill='%2300F0FF'%3E10101%3C/text%3E%3C/svg%3E");
  background-size: 100px 100px;
}

/* Border gradients */
.border-gradient-from-purple-500.to-cyan-500 {
  border-image: linear-gradient(to bottom, #bd00ff, #00f0ff) 1;
}

.border-gradient-from-fuchsia-500.to-purple-500 {
  border-image: linear-gradient(to bottom, #ff0099, #bd00ff) 1;
}

.border-gradient-from-cyan-500.to-blue-500 {
  border-image: linear-gradient(to bottom, #00f0ff, #1e3a8a) 1;
}

.border-gradient-from-red-500.to-amber-500 {
  border-image: linear-gradient(to bottom, #ff0055, #ffd700) 1;
}

.border-gradient-from-lime-500.to-emerald-500 {
  border-image: linear-gradient(to bottom, #00f0ff, #0d9488) 1;
}

/* Warning sign */
.warning-sign {
  display: flex;
  align-items: center;
  gap: 4px;
  padding: 4px 8px;
  background-color: rgba(0, 0, 0, 0.5);
  border: 1px solid rgba(255, 215, 0, 0.3);
  border-radius: 4px;
}

/* News ticker */
@keyframes ticker {
  0% {
    transform: translateX(0);
  }
  100% {
    transform: translateX(-100%);
  }
}

.animate-ticker {
  animation: ticker 30s linear infinite;
}

.news-glitch {
  animation: news-glitch 0.3s ease-in-out;
}

@keyframes news-glitch {
  0% {
    transform: translateX(0);
    opacity: 1;
  }
  20% {
    transform: translateX(5px);
    opacity: 0.8;
  }
  40% {
    transform: translateX(-5px);
    opacity: 0.9;
  }
  60% {
    transform: translateX(3px);
    opacity: 0.8;
  }
  80% {
    transform: translateX(-3px);
    opacity: 0.9;
  }
  100% {
    transform: translateX(0);
    opacity: 1;
  }
}

/* Binary scroll animation */
.binary-scroll {
  animation: binary-scroll 20s linear infinite;
  white-space: nowrap;
}

@keyframes binary-scroll {
  0% {
    transform: translateX(0);
  }
  100% {
    transform: translateX(-50%);
  }
}

/* Add these new animations to your existing globals.css file */

/* Ping animation for button effects */
@keyframes ping-slow {
  0% {
    transform: scale(1);
    opacity: 0.3;
  }
  50% {
    transform: scale(1.5);
    opacity: 0.1;
  }
  100% {
    transform: scale(1);
    opacity: 0.3;
  }
}

.animate-ping-slow {
  animation: ping-slow 3s cubic-bezier(0, 0, 0.2, 1) infinite;
}

/* Holographic overlay effect */
.holographic-overlay {
  background-blend-mode: screen;
  mix-blend-mode: overlay;
  pointer-events: none;
}

/* Data stream animation */
@keyframes data-stream {
  0% {
    transform: translateY(0) scale(1);
    opacity: 0.7;
  }
  100% {
    transform: translateY(100%) scale(0.5);
    opacity: 0;
  }
}

.data-stream-particle {
  animation: data-stream 2s linear infinite;
}

/* Add these new animations to your existing globals.css file */

/* Spin animation for holographic elements */
@keyframes spin-slow {
  from {
    transform: rotate(0deg);
  }
  to {
    transform: rotate(360deg);
  }
}

.animate-spin-slow {
  animation: spin-slow 20s linear infinite;
}

/* Particle effect animation */
@keyframes particle-effect {
  0% {
    transform: translateY(0) scale(1);
    opacity: 1;
  }
  100% {
    transform: translateY(-20px) scale(0);
    opacity: 0;
  }
}

/* Conic gradient background */
.bg-gradient-conic {
  background-image: conic-gradient(var(--tw-gradient-stops));
}

/* Holographic overlay effect */
.holographic-overlay {
  background-blend-mode: screen;
  mix-blend-mode: overlay;
  pointer-events: none;
}

/* Enhanced digital rain */
.digital-rain {
  position: absolute;
  top: 0;
  left: 0;
  right: 0;
  bottom: 0;
  overflow: hidden;
  background: linear-gradient(to bottom, transparent, rgba(0, 240, 255, 0.05));
}

.digital-rain::before {
  content: "";
  position: absolute;
  top: -100%;
  left: 0;
  right: 0;
  height: 200%;
  background: repeating-linear-gradient(to bottom, transparent 0%, rgba(0, 240, 255, 0.1) 0.5%, transparent 1%);
  animation: digital-rain 20s linear infinite;
}

/* Enhanced holographic element */

/* Glowing border animation */
@keyframes glow-border {
  0%,
  100% {
    box-shadow: 0 0 5px rgba(0, 240, 255, 0.5);
  }
  50% {
    box-shadow: 0 0 15px rgba(0, 240, 255, 0.8);
  }
}

.glow-border {
  animation: glow-border 2s ease-in-out infinite;
}

/* Neural connection animation */
@keyframes neural-pulse {
  0%,
  100% {
    opacity: 0.2;
  }
  50% {
    opacity: 0.6;
  }
}

.neural-connection {
  animation: neural-pulse 2s ease-in-out infinite;
}

/* Data stream animation */

.data-stream-particle {
  animation: data-stream 2s linear infinite;
}

/* Add these new holographic UI styles to the end of your globals.css file */

/* Holographic UI Elements */
.holographic-ui {
  position: relative;
  overflow: hidden;
  border-radius: 0.5rem;
  background: rgba(0, 0, 0, 0.2);
  backdrop-filter: blur(10px);
  border: 1px solid rgba(255, 255, 255, 0.1);
  box-shadow: 0 0 20px rgba(0, 240, 255, 0.2), 0 0 30px rgba(189, 0, 255, 0.1), inset 0 0 15px rgba(255, 255, 255, 0.05);
}

.holographic-ui::before {
  content: "";
  position: absolute;
  inset: 0;
  background: linear-gradient(
    135deg,
    rgba(0, 240, 255, 0.1) 0%,
    rgba(189, 0, 255, 0.1) 25%,
    rgba(255, 0, 153, 0.1) 50%,
    rgba(255, 215, 0, 0.1) 75%,
    rgba(0, 240, 255, 0.1) 100%
  );
  opacity: 0.5;
  z-index: -1;
  animation: holographic-gradient 8s linear infinite;
}

.holographic-ui::after {
  content: "";
  position: absolute;
  inset: 0;
  background: repeating-linear-gradient(
    to bottom,
    transparent,
    transparent 1px,
    rgba(255, 255, 255, 0.05) 1px,
    rgba(255, 255, 255, 0.05) 2px
  );
  z-index: -1;
}

@keyframes holographic-gradient {
  0% {
    background-position: 0% 0%;
  }
  100% {
    background-position: 200% 200%;
  }
}

.holographic-text {
  position: relative;
  color: white;
  text-shadow: 0 0 5px rgba(255, 255, 255, 0.5), 0 0 10px rgba(0, 240, 255, 0.3), 0 0 15px rgba(189, 0, 255, 0.2);
  letter-spacing: 0.05em;
}

.holographic-text::before {
  content: attr(data-text);
  position: absolute;
  left: 0.5px;
  top: 0;
  color: rgba(255, 0, 153, 0.7);
  z-index: -1;
  filter: blur(1px);
}

.holographic-text::after {
  content: attr(data-text);
  position: absolute;
  left: -0.5px;
  top: 0;
  color: rgba(0, 240, 255, 0.7);
  z-index: -1;
  filter: blur(1px);
}

.holographic-border {
  position: relative;
  border: 1px solid rgba(255, 255, 255, 0.1);
  border-radius: 0.5rem;
  overflow: hidden;
}

.holographic-border::before {
  content: "";
  position: absolute;
  inset: 0;
  border: 1px solid transparent;
  border-radius: inherit;
  background: linear-gradient(
      90deg,
      rgba(0, 240, 255, 0.5),
      rgba(189, 0, 255, 0.5),
      rgba(255, 0, 153, 0.5),
      rgba(255, 215, 0, 0.5),
      rgba(0, 240, 255, 0.5)
    )
    border-box;
  -webkit-mask: linear-gradient(#fff 0 0) padding-box, linear-gradient(#fff 0 0);
  -webkit-mask-composite: destination-out;
  mask-composite: exclude;
  animation: border-rotate 4s linear infinite;
  background-size: 300% 100%;
}

@keyframes border-rotate {
  0% {
    background-position: 0% center;
  }
  100% {
    background-position: 300% center;
  }
}

.holographic-card {
  position: relative;
  border-radius: 0.5rem;
  background: rgba(0, 0, 0, 0.3);
  backdrop-filter: blur(10px);
  border: 1px solid rgba(255, 255, 255, 0.1);
  overflow: hidden;
  transform-style: preserve-3d;
  transform: perspective(1000px);
}

.holographic-card::before {
  content: "";
  position: absolute;
  inset: 0;
  background: linear-gradient(
    135deg,
    rgba(0, 240, 255, 0.2) 0%,
    rgba(189, 0, 255, 0.2) 25%,
    rgba(255, 0, 153, 0.2) 50%,
    rgba(255, 215, 0, 0.2) 75%,
    rgba(0, 240, 255, 0.2) 100%
  );
  opacity: 0;
  transition: opacity 0.3s ease;
}

.holographic-card:hover::before {
  opacity: 1;
}

.holographic-card::after {
  content: "";
  position: absolute;
  inset: 0;
  background: radial-gradient(circle at var(--x, 50%) var(--y, 50%), rgba(255, 255, 255, 0.2) 0%, transparent 50%);
  opacity: 0;
  transition: opacity 0.3s ease;
}

.holographic-card:hover::after {
  opacity: 1;
}

.holographic-button {
  position: relative;
  overflow: hidden;
  background: rgba(0, 0, 0, 0.3);
  border: 1px solid rgba(255, 255, 255, 0.1);
  border-radius: 0.5rem;
  color: white;
  transition: all 0.3s ease;
}

.holographic-button::before {
  content: "";
  position: absolute;
  inset: 0;
  background: linear-gradient(
    90deg,
    rgba(0, 240, 255, 0.5),
    rgba(189, 0, 255, 0.5),
    rgba(255, 0, 153, 0.5),
    rgba(255, 215, 0, 0.5)
  );
  opacity: 0;
  transition: opacity 0.3s ease;
  z-index: -1;
}

.holographic-button:hover::before {
  opacity: 0.3;
}

.holographic-button::after {
  content: "";
  position: absolute;
  width: 200%;
  height: 100%;
  background: linear-gradient(90deg, transparent, rgba(255, 255, 255, 0.2), transparent);
  top: 0;
  left: -100%;
  transform: skewX(-30deg);
  transition: transform 0.5s ease;
}

.holographic-button:hover::after {
  transform: skewX(-30deg) translateX(100%);
}

.holographic-glow {
  box-shadow: 0 0 5px rgba(0, 240, 255, 0.5), 0 0 10px rgba(189, 0, 255, 0.3), 0 0 15px rgba(255, 0, 153, 0.2);
}

.holographic-panel {
  position: relative;
  background: rgba(0, 0, 0, 0.3);
  backdrop-filter: blur(10px);
  border-radius: 0.5rem;
  border: 1px solid rgba(255, 255, 255, 0.1);
  overflow: hidden;
}

.holographic-panel::before {
  content: "";
  position: absolute;
  inset: 0;
  background: linear-gradient(90deg, transparent 49.5%, rgba(0, 240, 255, 0.5) 50%, transparent 50.5%) 0 0 / 10px 100%,
    linear-gradient(0deg, transparent 49.5%, rgba(189, 0, 255, 0.5) 50%, transparent 50.5%) 0 0 / 100% 10px;
  opacity: 0.3;
  pointer-events: none;
}

.holographic-badge {
  position: relative;
  display: inline-flex;
  align-items: center;
  justify-content: center;
  padding: 0.25rem 0.75rem;
  background: rgba(0, 0, 0, 0.3);
  border-radius: 9999px;
  font-size: 0.75rem;
  font-weight: 500;
  color: white;
  overflow: hidden;
}

.holographic-badge::before {
  content: "";
  position: absolute;
  inset: 0;
  background: linear-gradient(90deg, rgba(0, 240, 255, 0.5), rgba(189, 0, 255, 0.5));
  opacity: 0.3;
  z-index: -1;
}

.holographic-badge::after {
  content: "";
  position: absolute;
  inset: 0;
  background: linear-gradient(90deg, transparent, rgba(255, 255, 255, 0.2), transparent);
  animation: badge-shine 3s linear infinite;
}

@keyframes badge-shine {
  0% {
    transform: translateX(-100%);
  }
  100% {
    transform: translateX(100%);
  }
}

.holographic-data-point {
  position: absolute;
  width: 4px;
  height: 4px;
  border-radius: 50%;
  background: rgba(0, 240, 255, 0.8);
  box-shadow: 0 0 5px rgba(0, 240, 255, 0.8);
  opacity: 0.7;
  animation: data-point-pulse 2s ease-in-out infinite;
}

@keyframes data-point-pulse {
  0%,
  100% {
    transform: scale(1);
    opacity: 0.7;
  }
  50% {
    transform: scale(1.5);
    opacity: 1;
  }
}

.holographic-data-line {
  position: absolute;
  height: 1px;
  background: linear-gradient(90deg, rgba(0, 240, 255, 0.5), rgba(189, 0, 255, 0.5));
  opacity: 0.5;
  transform-origin: left center;
}

.holographic-floating {
  animation: floating 3s ease-in-out infinite;
}

@keyframes floating {
  0%,
  100% {
    transform: translateY(0);
  }
  50% {
    transform: translateY(-10px);
  }
}

.holographic-rotate {
  animation: holographic-rotate 10s linear infinite;
}

@keyframes holographic-rotate {
  0% {
    transform: rotate(0deg);
  }
  100% {
    transform: rotate(360deg);
  }
}

.holographic-pulse {
  animation: holographic-pulse 2s ease-in-out infinite;
}

@keyframes holographic-pulse {
  0%,
  100% {
    opacity: 0.5;
    transform: scale(1);
  }
  50% {
    opacity: 1;
    transform: scale(1.05);
  }
}

.holographic-shimmer {
  position: relative;
  overflow: hidden;
}

.holographic-shimmer::after {
  content: "";
  position: absolute;
  top: -50%;
  left: -50%;
  width: 200%;
  height: 200%;
  background: linear-gradient(
    to bottom right,
    transparent,
    transparent,
    transparent,
    transparent,
    rgba(255, 255, 255, 0.1),
    transparent,
    transparent,
    transparent,
    transparent
  );
  transform: rotate(30deg);
  animation: holographic-shimmer 3s linear infinite;
}

@keyframes holographic-shimmer {
  0% {
    transform: rotate(30deg) translateY(-100%);
  }
  100% {
    transform: rotate(30deg) translateY(100%);
  }
}
